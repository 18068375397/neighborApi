buildscript {
    ext {
        queryDslVersion = "5.1.0"
        springBootVersion = "3.2.4"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.3'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.co.neighbor21'
version = '1.1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // starter
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: "${springBootVersion}"

    /* swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    /**queryDSL 스프링 부트 3.0 이상*/
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /*lombok*/
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.1.0' /**mapstruct 관련 추가 */

    /* map struct */
    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

    /* jwt */
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'

    /* OJDBC */
//	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    /* JDBC에서 지원되지 않는 문자 집합(클래스 경로에 orai18n.jar 추가): KO16MSWIN949 */
//	implementation group: 'com.oracle.ojdbc', name: 'orai18n', version: '19.3.0.0'

    /* GSON */
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    // https://mvnrepository.com/artifact/org.locationtech.jts/jts-core
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.19.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

////--------------------queryDSL 관련 추가----------------------------
def generated = 'src/main/generated'
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
sourceSets {
    main.java.srcDirs += [generated]
}
clean {
    delete file(generated)
}